# 流程：计算机执行代码的顺序
# 流程控制的分类：
#     1.顺序流程：默认从上到下的执行结构
#     2.选择流程/分支结构：根据在某一步的判断，有选择的去执行相应的逻辑的一种结构
#         2.1单分支
#             if条件表达式:
#                 一条条代码结构
#                 一条条代码结构
#                 一条条代码结构
#                 ....
#         2.2双分支
#             if表达式:
#                 一条条代码结构
#                 一条条代码结构
#                 一条条代码结构
#             else:
#                 一条条代码结构
#                 一条条代码结构
#                 一条条代码结构
#                 ...
#         2.3多分枝
#             if表达式:
#                 一条条代码结构
#                 一条条代码结构
#                 一条条代码结构
#                 ....
#             elif 条件表达式：
#                 一条条代码结构
#                 一条条代码结构
#                 一条条代码结构
#                 ....
#             elif 条件表达式：
#                 一条条代码结构
#                 一条条代码结构
#                 一条条代码结构
#                 ....
#             ....
#             else 条件表达式：
#                 一条条代码结构
#                 一条条代码结构
#                 一条条代码结构
#                 ....
#     3.循环流程：在满足一定的条件下，一直重复去执行某段代码

# # 实践1-单分支
# cock=16
# if cock<=15:
#     print('吉吉不够长，要继续加油喔')
#     pass #空语句
# print('语句运行结束')
#
#
# # 实践2-双分支
# cock=16
# if cock>20:
#     print('你的足够大，合格！')
#     pass
# else:
#     print('你的不合格，请继续努力~')


# 实践3-多分支
# 原自己写的
# cock=int(input('请输入你的...'))
# # cock=int(cock)  # 将输入的字符串转换为整数
# print(type(cock))
# if cock>20:
#     print('你的足够大，合格！')
#     pass
# elif cock>=15:
#     print('你的还不错，请继续加油~')
#     pass
# elif cock<3:
#     print('你的没救了，再见~')
#     pass
# elif cock<=10:
#     print('你的有点小，请努力~')
#     pass


# 错误1：之前使用了cock=input{'请输入你的...'}，这是语法错误，input是函数，应该使用圆括号input()
# 错误2：input()函数返回的是字符串类型，如果直接与数字比较会导致类型错误
# 错误3：没有异常处理，如果用户输入非数字，程序会崩溃


# 使用try-except结构添加异常处理
# while True:
#     try:
#         cock=int(input('请输入你的...'))  # 正确的写法：使用圆括号调用函数，并直接转换为整数
#         print(f'你输入的值是：{cock}，类型是：{type(cock)}')
#
#         # 条件分支顺序遵循"从具体到一般"的原则
#         # 先检查更具体的条件，再检查更宽泛的条件
#         if cock>20:
#             print('你的足够大，合格！')
#         elif cock>=15:
#             print('你的还不错，请继续加油~')
#         elif cock<3:
#             print('你的没救了，再见~')
#         elif cock<=10:
#             print('你的有点小，请努力~')
#         else:
#             # 添加else分支处理3到10之间的数值（虽然逻辑上这个分支永远不会被执行到）
#             print('输入值在3到10之间')
#         break  # 输入成功，退出循环
#     except ValueError:
#         print('输入错误！请输入一个有效的数字。')




# cock=int(input('请输入你的尺寸'))
# print(type(cock))
# if cock>20:
#     print('你的足够大，合格！')
#     pass
# elif cock>=15:
#     print('你的还不错，请继续加油~')
#     pass
# elif cock<3:
#     print('你的没救了，再见~')
#     pass
# elif cock<=10:
#     print('你的有点小，请努力~')
#     pass
# else:#选配
#     print('可以回家哭了')
#
# print('测试结束')


# 多分支 多条件的演练
# 猜拳小游戏
# 0:石头 1:剪刀 2:布
import random
# 计算机  人
person=int(input('请出拳：[0:石头 1:剪刀 2:布]'))
computer=random.randint(0,2)
if person==0 and computer==1:
    print('厉害了..你赢了')
    pass
